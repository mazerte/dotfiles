#!/usr/bin/env bash

set -e

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  export CURRENT_OSTYPE="linux"
  export CURRENT_ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')"
  export CURRENT_LINUX_OS=$(egrep '^ID=' /etc/os-release | cut -d "=" -f 2 | sed 's/\"//g')
  export CURRENT_VERSION=$(egrep '^VERSION_ID=' /etc/os-release | cut -d "=" -f 2 | sed 's/\"//g')
elif [[ "$OSTYPE" == "darwin"* ]]; then
  export CURRENT_OSTYPE="macos"
  export CURRENT_ARCH=$(/usr/bin/arch)
  export CURRENT_VERSION=$(sw_vers -productVersion)
else
  export CURRENT_OSTYPE="unknown"
fi

if [ -f /.dockerenv ]; then
  export CURRENT_IS_DOCKER=1
else
  export CURRENT_IS_DOCKER=0
fi

DOTBOT_DIR="dotbot"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [[ "$CURRENT_OSTYPE" == "linux" ]]; then
  CONFIG="install-linux.conf.yaml"
  if [[ "$CURRENT_LINUX_OS" == "debian" ]] || [[ "$CURRENT_LINUX_OS" == "ubuntu" ]]; then
    CURRENT_LINUX_OS=$CURRENT_LINUX_OS "$BASEDIR/setup_ubuntu_debian.sh"
  elif [[ "$CURRENT_LINUX_OS" == "amzn" ]]; then
    "$BASEDIR/setup_amzn2.sh"
  fi
else
  CONFIG="install.conf.yaml"
  SUDO_CONFIG="install-sudo.conf.yaml"
fi

cd "${BASEDIR}"
git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${DOTBOT_DIR}"

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
if [ -z $SUDO_CONFIG ]; then
  sudo "${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${SUDO_CONFIG}" "${@}"
fi
